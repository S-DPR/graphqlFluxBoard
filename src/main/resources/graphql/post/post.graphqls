extend type Query {
    findAllPosts(postFilterInput: PostFilterInput): [Post]
    findPostById(postId: ID!): Post
}

extend type Mutation {
    createPost(savePostInput: SavePostInput!): Post
    deletePost(deletePostInput: DeletePostInput!): Boolean
}

type Post {
    id: ID!
    title: String!
    user: User # 유저는 없을수도 있으니까 (글 쓴 후 탈퇴)
    content: String!
    createdAt: DateTime
}

input SavePostInput {
    title: String!
    content: String!
    password: String!
    userId: String!
}

input PostFilterInput {
    type: FilterType = NONE
    keyword: String = ""
    page: Int = 1
    sizePerPage: Int = 5
    sortField: String = "createdAt"
    sortOrder: SortOrder = DESC
}

input DeletePostInput {
    postId: ID!
    password: String!
}

enum FilterType {
    NONE
    AUTHOR
    TITLE
    CONTENT
    TITLE_AND_CONTENT
}

enum SortOrder {
    ASC
    DESC
}

